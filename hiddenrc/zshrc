# Antigen: https://github.com/zsh-users/antigen
ANTIGEN="$HOME/.local/bin/antigen.zsh"

# Install antigen.zsh if not exist
if [ ! -f "$ANTIGEN" ]; then
  echo "Installing antigen ..."
  [ ! -d "$HOME/.local" ] && mkdir -p "$HOME/.local" 2> /dev/null
  [ ! -d "$HOME/.local/bin" ] && mkdir -p "$HOME/.local/bin" 2> /dev/null
  # [ ! -f "$HOME/.z" ] && touch "$HOME/.z"
  URL="http://git.io/antigen"
  TMPFILE="/tmp/antigen.zsh"
  if [ -x "$(which curl)" ]; then
    curl -L "$URL" -o "$TMPFILE"
  elif [ -x "$(which wget)" ]; then
    wget "$URL" -O "$TMPFILE"
  else
    echo "ERROR: please install curl or wget before installation !!"
    exit
  fi
  if [ ! $? -eq 0 ]; then
    echo ""
    echo "ERROR: downloading antigen.zsh ($URL) failed !!"
    exit
  fi;
  echo "move $TMPFILE to $ANTIGEN"
  mv "$TMPFILE" "$ANTIGEN"
fi

# Initialize command prompt
if [[ -z $DISPLAY ]]; then
  export EDITOR='vim'
  export BROWSER='w3m'
else
  export EDITOR='nvim'
  export BROWSER='chromium'
fi

export FZF_DEFAULT_OPTS='--height 40% --reverse --multi'

[ -z "$PS1" ] && export PS1="%n@%m:%~%# "
[ -z "$EDITOR" ] && export EDITOR='vim'
[ -z "$VISUAL" ] && export VISUAL='vim'
[ -z "$TERM" ] && export TERM="xterm-256color"

# Initialize antigen
source "$ANTIGEN"

# Initialize prezto
# antigen use prezto
antigen use oh-my-zsh
# antigen use http://git.grml.org/f/grml-etc-core/etc/zsh/zshrc

# default bundles
# antigen bundle git
# antigen bundle rupa/z z.sh
# antigen bundle sinetoami/web-search
antigen bundle z
antigen bundle web-search
antigen bundle romkatv/archive
antigen bundle zdharma/fast-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
# antigen bundle zsh-users/zsh-completions
# antigen bundle Vifon/deer
# antigen bundle willghatch/zsh-cdr
# antigen bundle zsh-users/zaw

case ${TERM} in
  xterm*|rxvt*|Eterm|aterm|kterm|gnome*)
    antigen theme romkatv/powerlevel10k
    ;;
  *)
    antigen theme ys
    ;;
esac

antigen apply

autoload -Uz archive lsarchive unarchive edit-command-line

zle -N edit-command-line

my-ctrl-z() {
if [[ $#BUFFER -eq 0 ]]; then
  BUFFER="fg"
  zle accept-line -w
else
  zle push-input -w
  zle clear-screen -w
fi
}
zle -N my-ctrl-z

toggle-sudo() {
[[ -z "$BUFFER" ]] && zle up-history -w
if [[ "$BUFFER" != "sudo "* ]]; then
  BUFFER="sudo $BUFFER"
  CURSOR=$(( CURSOR + 5 ))
else
  BUFFER="${BUFFER#sudo }"
fi
}
zle -N toggle-sudo

toggle-ddg() {
[[ -z "$BUFFER" ]] && zle up-history -w
if [[ "$BUFFER" != "ddg "* ]]; then
  BUFFER="ddg $BUFFER"
  CURSOR=$(( CURSOR + 5 ))
else
  BUFFER="${BUFFER#ddg }"
fi
}
zle -N toggle-ddg

function mdg() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories mdg


bindkey -s '\eo' 'cd ..\n'
bindkey -s '\e;' 'll\n'
bindkey -s '\eu' 'ranger\n'
bindkey -s '\e-' 'cd -\n'
bindkey -s '\e0' 'cd ~\n'
bindkey -s '\ep' 'ncdu\n'
bindkey -s '\ea' 'bc -l\n'
bindkey -s '^t' 'cd "$(dirname "$(fzf)")"\n'
# Edit line in vim with ctrl-e:
bindkey '\ee' edit-command-line
bindkey '\es' toggle-sudo
bindkey '\ei' toggle-ddg
bindkey '^z'  my-ctrl-z

# p10k configure
# POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
[ -f ~/.p10k.zsh ] && source ~/.p10k.zsh
# ~/.fzf/install -all
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# source other file if exit
[ -f ~/.aliases ] && source ~/.aliases

# source other shell file
for confile (~/.config/custom-login/*.zsh); do
  source $confile
done
